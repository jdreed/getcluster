.TH GETCLUSTER 8 "20 April 1987"
.SH NAME
getcluster \- retrieve service cluster info from Hesiod as environment vars
.SH SYNOPSIS
getcluster [-b] [-d] hostname version

# C shell example
.br
getcluster `hostname` 5.3 > file; source file

# Bourne shell example
.br
getcluster -b `hostname` 5.3 > file; . file

.PP
.SH DESCRIPTION
.I Getcluster
queries the Hesiod database for service cluster information associated
with the workstation on which it is run.  It writes a set of environment
variable assignments on its standard output in a format acceptable
to the C shell, or, if the -b flag is present, in Bourne shell syntax.
.I Getcluster
returns an exit status of 1 if any errors were encountered.

In some cases there may be several Hesiod variable definitions for the
same variable, all or all but one of which is tagged with a distinct
version number in the third field.  In this case,
.I Getcluster
if the environment variable AUTOUPDATE does not have the value "true",
.I Getcluster
takes the value matching the major and minor number of the version
number passed on the command line.  If the environment variable
AUTOUPDATE has the value "true",
.I Getcluster
takes the value with the higher version number tag, discarding any
entries marked as testing whose version numbers do not match the major
and minor number of the command line version.  Entries are marked as
testing by a fourth field containing the letter t.  The idea is that
the maintainer of an auto-update machine must update manually to
testing releases, but the machine will update automatically to
production releases.

If any cluster entries were discarded because they had versions higher
than the current workstation version (either because AUTOUPDATE was
not set or because they were marked with the t flag),
.I Getcluster
will output a variable definition for NEW_TESTING_RELEASE,
NEW_PRODUCTION_RELEASE, or both, giving the highest discarded version
with the t flag set and without the t flag set, respectively.  This
allows
.I reactivate
to display a console message indicating the presence of a new testing
or production release (or, in some cases, both).

If the -d flag is present,
.I Getcluster
will ignore the hostname argument and instead read lines from standard
input, treating each line as if it were an entry in the Hesiod
database for the host's cluster information.

.I Getcluster
is usually invoked from
.I save_cluster_info (8),
which places its output in the files
.I /etc/athena/clusterinfo
and
.I /etc/athena/clusterinfo.bsh
to be accessed by the C shell in a user's .login file and the Bourne
shell in a user's .profile, respectively.  It may also be invoked
directly by any user.
.PP
Getcluster uses the Hesiodnametypes "clustername" and "cluster".
.SH "SEE ALSO"
`Hesiod - Project Athena Technical Plan -- Name Service', save_cluster_info(8)
.SH AUTHOR
Steve Dyer, IBM/Project Athena
.br
Copyright 1987, Massachusetts Institute of Technology
.br
.SH BUGS
